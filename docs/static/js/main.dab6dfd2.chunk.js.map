{"version":3,"sources":["Field.tsx","store.ts","Consts.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Field","props","className","label","right","left","type","onChange","e","target","value","options","map","opt","disabled","store","key","val","defaults","JSON","parse","localStorage","getItem","error","setItem","stringify","removeItem","SymbolRates","USD","OIL","BTC","XAU","EUR","GBP","AUD","CAD","CHF","JPY","NZD","SymbolConfs","USOIL","tickSize","lotSize","BTCUSD","XAUUSD","USDJPY","USDCHF","USDCAD","GBPUSD","AUDUSD","NZDUSD","EURUSD","EURGBP","EURCHF","EURNZD","GBPJPY","GBPCAD","GBPNZD","GBPCHF","AUDCAD","AUDCHF","AUDNZD","AUDGBP","AUDJPY","CADCHF","CADJPY","Symbols","Object","keys","getCurrency","symbol","basic","quote","currencies","find","s","startsWith","endsWith","Error","lastResult","loadCurrency","currency","a","script","document","createElement","src","body","appendChild","Promise","res","rej","onerror","onload","result","window","test","Number","removeChild","console","info","lastUpdateTime","Cookie","get","assign","log","Hour","Date","now","toFixed","cur","includes","set","String","expires","msg","delete","location","reload","DefaultState","risk","balance","stopLossPoints","lever","App","useState","state","setState","timerRef","useRef","update","field","format","f","v","setTimeout","current","clearTimeout","updateNum","pointProfit","getPointProfit","lots","Math","round","pricePerLot","pos","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dab6dfd2.chunk.js","sourcesContent":["import React from \"react\";\nexport interface Props {\n  label: string\n  value: string | number\n  onChange: (val: any) => void\n  right?: any\n  left?: any\n  type: string\n  disabled?: boolean\n  options?: { label?: string, value: string }[]\n}\nconst Field = (props: Props) => {\n  return (\n    <div className=\"field is-horizontal\">\n      <div className=\"field-label is-normal\">\n        <label className=\"label\">{props.label}</label>\n      </div>\n      <div className=\"field-body\">\n        <div className=\"field\">\n          <div className={`control ${props.right ? 'has-icons-right' : ''} ${props.left ? 'has-icons-left' : ''}`}>\n            {props.type === 'select' ? (\n              <div className=\"select\">\n                <select onChange={e => props.onChange(e.target.value)} value={props.value}>\n                  {(props.options || []).map(opt => {\n                    return <option value={opt.value}>{opt.label || opt.value}</option>\n                  })}\n                </select>\n              </div>\n            ) : (\n\n              <input disabled={props.disabled} className=\"input\" type={props.type} value={props.value} onChange={e => props.onChange((e.target as any).value)} />\n            )}\n            {props.left && (\n              <span className=\"is-left icon\">\n                {props.left}\n              </span>\n            )}\n            {props.right && (\n              <span className=\"is-right icon\">\n                {props.right}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Field;\n","class Store {\n  get<V = any>(key: string, defaults: V): V\n  get<V = any>(key: string): V | null\n  get<V = any>(key: string, defaults: V | null = null): V | null {\n    let val: V | null\n    try {\n      val = JSON.parse(localStorage.getItem(key)!)\n      if (val != null) {\n        return val\n      }\n    } catch (error) { }\n    return defaults\n  }\n  set<V>(key: string, val: V) {\n    localStorage.setItem(key, JSON.stringify(val))\n  }\n  delete(key: string) {\n    localStorage.removeItem(key)\n  }\n}\n\nexport const store = new Store()\n","import Cookie from 'js-cookie'\nimport { store } from './store';\nexport const SymbolRates = {\n  USD: 1,\n  OIL: 57.35,\n  BTC: 8860,\n  XAU: 1458.48,\n  EUR: 1.1021,\n  GBP: 1.2793,\n  AUD: 0.6856,\n  CAD: 0.7558,\n  CHF: 1.0021,\n  JPY: 0.009153,\n  NZD: 0.6327,\n}\n\nconst ForexLotSize = 100000\nconst ForexTickSize = 0.0001\nexport const SymbolConfs = {\n  USOIL: {\n    tickSize: 0.01,\n    lotSize: 1000,\n  },\n  BTCUSD: {\n    tickSize: 0.1,\n    lotSize: 1,\n  },\n  XAUUSD: {\n    tickSize: 0.01,\n    lotSize: 100,\n  },\n  USDJPY: {\n    tickSize: 0.01,\n    lotSize: ForexLotSize,\n  },\n  USDCHF: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  USDCAD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  GBPUSD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  AUDUSD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  NZDUSD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  EURUSD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  EURGBP: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  EURCHF: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  EURNZD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  GBPJPY: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  GBPCAD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  GBPNZD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  GBPCHF: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  AUDCAD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  AUDCHF: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  AUDNZD: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  AUDGBP: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  AUDJPY: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  CADCHF: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n  CADJPY: {\n    tickSize: ForexTickSize,\n    lotSize: ForexLotSize,\n  },\n}\n/*\n也都以美元来计算结果。例如欧元兑英镑，欧元为基本货币，英镑为报价货币。\n\n计算交叉盘外汇对的点值\n公式：点值 = 手数(lot size) x 基点(tick size) x 基本货币与美元的汇率(base quote) / 该外汇的汇\n\n率(current rate)\n例如：在0.6750时买入100000欧元兑英镑的合约，这个时候欧美的汇率为1.1840\n1点值 = 100000（手数）x 0.0001（基点）x 1.840（欧美汇率） / 0.6750（欧元兑英镑汇率）= $17.54\n*/\nexport const Symbols = Object.keys(SymbolConfs)\n\nexport type Currency = keyof (typeof SymbolRates)\nexport type Symbol = keyof (typeof SymbolConfs)\n\n\nexport function getCurrency(symbol: Symbol) {\n  if (symbol === 'USOIL') {\n    return { basic: 'OIL' as Currency, quote: 'USD' as Currency }\n  }\n  const currencies = Object.keys(SymbolRates)\n  let basic = currencies.find(s => symbol.startsWith(s)) as Currency\n  let quote = currencies.find(s => symbol.endsWith(s)) as Currency\n  if (!basic || !quote) {\n    throw new Error(`Cannot find currency: ${basic} ${quote}`)\n  }\n  return { basic, quote }\n}\n\nexport function getPointProfit(symbol: Symbol) {\n  if (symbol === 'USOIL') {\n    return SymbolConfs[symbol].lotSize * SymbolConfs[symbol].tickSize * SymbolRates.OIL / SymbolRates.OIL\n  }\n  const { basic, quote } = getCurrency(symbol)\n  return SymbolConfs[symbol].lotSize * SymbolConfs[symbol].tickSize * SymbolRates[basic] / (SymbolRates[basic] / SymbolRates[quote])\n}\n\nlet lastResult = ''\nasync function loadCurrency(currency: string) {\n  let script = document.createElement('script')\n  script.src = `https://api.jijinhao.com/plus/convert.htm?from_tkc=${currency}&to_tkc=USD&amount=1&_=1573363635187`\n  document.body.appendChild(script)\n  return new Promise<number>((res,rej) => {\n    script.onerror = rej\n    script.onload = () => {\n      let result = (window as any)['result']\n      if (typeof result === 'string' && /^[\\d.]+$/.test(result) && result !==lastResult) {\n        res(Number(result))\n        lastResult = result\n      }\n      document.body.removeChild(script)\n    }\n  })\n}\n\nexport const UpdateExpireKey = 'updated_currency'\nexport const CurrencyExchangeKey = 'currency_exchange'\nexport const StateKey = 'state'\n;(async () => {\n  console.info(`跳过加载: BTC, OIL`)\n  const lastUpdateTime = Cookie.get(UpdateExpireKey)\n  if (\n    lastUpdateTime\n  ) {\n    const Hour = 3600 * 1000\n    Object.assign(SymbolRates, store.get<object>(CurrencyExchangeKey, {}))\n    console.log(`${((Number(lastUpdateTime) + Hour * 24 - Date.now()) / Hour).toFixed(2)}小时后更新汇率`)\n    return\n  }\n  for (const cur in SymbolRates) {\n    if (['USD', 'OIL', 'BTC'].includes(cur)) continue\n    try {\n      let result = await loadCurrency(cur)\n      ;(SymbolRates as any)[cur] = result\n      console.info(`加载最新的 ${cur}/USD: ${result}`)\n    } catch (error) {\n      console.error(`加载 ${cur}/USD 失败.`, error)\n    }\n  }\n  store.set(CurrencyExchangeKey, SymbolRates)\n  Cookie.set(UpdateExpireKey, String(Date.now()), {expires: 1 })\n})()\n\nwindow.onerror = (msg)=> {\n  if (typeof msg !== 'string') return\n  if (/Script error/.test(msg)) return\n  store.delete(CurrencyExchangeKey)\n  store.delete(StateKey)\n  window.location.reload()\n}\n","import React, { useState, useRef, useImperativeHandle } from 'react'\nimport logo from './logo.svg'\nimport 'bulma/css/bulma.min.css'\nimport './App.css'\nimport Field from './Field'\nimport { store } from './store';\nimport { getPointProfit, Symbol, getCurrency, SymbolConfs, SymbolRates, Symbols, CurrencyExchangeKey, StateKey } from './Consts';\n\n\nconst DefaultState = {\n  /** 每笔风险% */\n  risk: 2,\n  /** 账户总额 */\n  balance: 500,\n  /** 止损点数 */\n  stopLossPoints: 100,\n  // /** 每点价格 */\n  // pointProfit: 10,\n  // /** 每手金额 */\n  // pricePerLot: ForexLotSize,\n  /** 杠杆 */\n  lever: 2000,\n  /** 货币对 */\n  symbol: 'USDCHF' as Symbol,\n}\ntype State = typeof DefaultState\n\n\n// Symbols.forEach(s => console.log(s, getPointProfit(s as Symbol)))\n\nconst App: React.FC = () => {\n  let [state, setState] = useState(store.get<State>(StateKey, DefaultState))\n  ;(window as any)['store'] = store\n  let timerRef = useRef(null as any)\n  const update = (field: keyof (typeof state), format: (v: any) => any = f => f) => (v: any) => {\n    setTimeout(() => {\n      setState(s => {\n        s = { ...s, [field]: format(v) }\n        if (timerRef.current) {\n          clearTimeout(timerRef.current)\n          timerRef.current = null\n        }\n        timerRef.current = setTimeout(() => {\n          store.set(StateKey, s)\n          timerRef.current = null\n        }, 1000)\n        return s\n      })\n    })\n  }\n  const updateNum = (field: keyof (typeof state)) => update(field, Number)\n  /** 每点的点值(每点值多少美元) */\n  const pointProfit = getPointProfit(state.symbol)\n  /** 每笔手数 */\n  let lots = state.balance * (state.risk / 100) / (state.stopLossPoints * pointProfit)\n  lots = Math.round(lots * 100) / 100\n  const { basic, quote } = getCurrency(state.symbol)\n  /** 每手美元 */\n  const pricePerLot = SymbolConfs[state.symbol].lotSize * SymbolRates[basic]\n  /** 保证金 */\n  let pos = Number((pricePerLot * lots / state.lever).toFixed(2))\n  return (\n    <div className=\"container root\">\n      <h1 className=\"title\">仓位计算器</h1>\n      <div className=\"columns is-mobile is-multiline is-centered\">\n        <div className=\"column is-half\">\n          <Field\n            type=\"number\"\n            label=\"本金\"\n            value={state.balance}\n            left=\"$\"\n            onChange={updateNum('balance')}\n          />\n        </div>\n        <div className=\"column is-half\">\n          <Field\n            type=\"number\"\n            label=\"每笔风险\"\n            value={state.risk}\n            right=\"%\"\n            onChange={updateNum('risk')}\n          />\n        </div>\n        <div className=\"column is-half\">\n          <Field\n            type=\"select\"\n            label=\"货币对\"\n            value={state.symbol}\n            options={Symbols.map(s => ({ value: s }))}\n            onChange={update('symbol')}\n          />\n          {/* <Field\n            type=\"number\"\n            label=\"每点收益\"\n            value={state.pointProfit}\n            left=\"$\"\n            onChange={update('pointProfit')}\n          /> */}\n        </div>\n        <div className=\"column is-half\">\n          <Field\n            type=\"number\"\n            label=\"杠杆\"\n            value={state.lever}\n            onChange={updateNum('lever')}\n          />\n        </div>\n        <div className=\"column is-half\">\n          <Field\n            type=\"number\"\n            label=\"止损点数\"\n            value={state.stopLossPoints}\n            onChange={updateNum('stopLossPoints')}\n          />\n        </div>\n        <div className=\"column is-half\">\n          {['BTCUSD', 'USOIL'].includes(state.symbol) && (() => {\n            const cur = state.symbol === 'BTCUSD' ? 'BTC' : 'OIL'\n            return (\n              <Field\n                type=\"number\"\n                label={`${cur}兑美元`}\n                value={SymbolRates[cur]}\n                onChange={e => {\n                  setTimeout(() => {\n                    SymbolRates[cur] = e\n                    store.set(CurrencyExchangeKey, SymbolRates)\n                    setState({...state})\n                  })\n                }}\n              />\n            )\n          })()}\n        </div>\n        <div className=\"column is-full\">\n          <div className=\"notification is-primary\">\n            <div>\n              进场手数：<span className=\"result\">{lots}</span>手\n            </div>\n            <div>\n              进场保证金：<span className=\"result\">${pos}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}